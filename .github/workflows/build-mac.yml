name: Build-macOS

on:
  release:

  push:
    branches: [ master, dimiden-build ]
  pull_request:
    branches: [ master, dimiden-build ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      build_release:
        description: 'Build Release binaries'
        required: false
        type: boolean

# Set the build type here
env:
  #B_BUILD_TYPE: ${{ (inputs.build_release || github.event_name == 'release') && 'Release' || 'Debug' }}
  B_BUILD_TYPE: Release
  DEBIAN_FRONTEND: noninteractive

jobs:
  mac-build:
    name: ${{ matrix.name}}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
       include:
         - name: macOS-x86_64
           os: macos-11
           qt-version: 5.15
           min-macOS-version: 10.9
           arch: 'x86_64'
         - name: macOS-Universal
           os: macos-12
           qt-version: 6.6
           min-macOS-version: 11
           qt-modules: qt5compat
           arch: 'arm64;x86_64'
         - name: macOS-Apple_Silicon
           os: macos-14
           qt-version: 6.6
           min-macOS-version: 14
           qt-modules: qt5compat
           arch: 'arm64'

    env:
      VERBOSE: 1
      TERM: xterm-256color
      OpenSSL_Install_Path: "/Users/runner/openssl"
      OpenSSL_Version: 3.2.0

    steps:
      - name: Install Qt
        uses: jurplel/install-qt-action@v4
        with:
          version: ${{matrix.qt-version}}
          modules: ${{matrix.qt-modules}}
          cache: true
          cache-key-prefix: macOS-${{matrix.os}}-Qt${{matrix.qt-version}}

      - name: Setup the image
        run: |
          brew install ninja

      - name: Cache OpenSSL Universal
        id: cache-openssl
        if: matrix.os == 'macos-12'
        uses: actions/cache@v4.0.2
        with:
          path: ${{env.OpenSSL_Install_Path}}
          key: macOS-${{matrix.os}}-ssl-${{matrix.arch}}-${{env.OpenSSL_Version}}

      - name: Build OpenSSL Universal
        if: ((steps.cache-openssl.outputs.cache-hit != 'true') && (matrix.os == 'macos-12'))
        run: |
          wget https://github.com/openssl/openssl/releases/download/openssl-${{env.OpenSSL_Version}}/openssl-${{env.OpenSSL_Version}}.tar.gz
          tar -xf openssl-${{env.OpenSSL_Version}}.tar.gz
          echo "#!/bin/bash
          if [[ \$* == *-arch\ x86_64* ]] && ! [[ \$* == *-arch\ arm64* ]]; then
            cc -arch arm64 \$@
          else
            cc \$@
          fi" >> /Users/runner/cc_override
          chmod a+x /Users/runner/cc_override
          cat /Users/runner/cc_override
          export MACOSX_DEPLOYMENT_TARGET=${{matrix.min-macOS-version}}
          export CC=/Users/runner/cc_override
          cd openssl-${{env.OpenSSL_Version}}
          ./configure no-asm darwin64-x86_64-cc --prefix=${{env.OpenSSL_Install_Path}}
          make
          make install

      - uses: actions/checkout@v4
        with:
          path: input-leap
          submodules: recursive

      - name: Setup the build
        run: |
          cmake -DCMAKE_BUILD_TYPE="${B_BUILD_TYPE}" -S input-leap -B build -G Ninja -DOpenSSL_ROOT=${{env.OpenSSL_Install_Path}} \
                -DCMAKE_OSX_SYSROOT=$(xcode-select --print-path)/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk \
                -DCMAKE_OSX_DEPLOYMENT_TARGET=${{matrix.min-macOS-version}} -DCMAKE_UNITY_BUILD=1 -DQT_DEFAULT_MAJOR_VERSION=$(echo ${{matrix.qt-version}} | cut -c -1) \
                -DCMAKE_OSX_ARCHITECTURES="${{matrix.arch}}"

      - name: Run the build
        run: |
          cmake --build build --parallel

      - uses: actions/upload-artifact@v4
        if: env.B_BUILD_TYPE == 'Release'
        with:
          name: ${{ matrix.os }}-installer
          path: ./build/bundle/*.dmg
          if-no-files-found: error

      - name: Archive debug app
        if: env.B_BUILD_TYPE != 'Release'
        run: tar -czf InputLeap-${{matrix.name}}.tar.gz -C build/bundle InputLeap.app

      - uses: actions/upload-artifact@v4
        if: env.B_BUILD_TYPE != 'Release'
        with:
          name: ${{ matrix.name }}-debug
          path: ./InputLeap*.tar.gz
          if-no-files-found: error
